forward以及redirect：
    当处理器对请求处理完毕后，向其它资源进行跳转时，有两种跳转方式：请求转发与重
    定向。而根据所要跳转的资源类型，又可分为两类：跳转到页面与跳转到其它处理器。

    注意，对于请求转发的页面，可以是WEB-INF中页面；而重定向的页面，是不能为WEB-INF
    中页的。因为重定向相当于用户再次发出一次请求，而用户是不能直接访问 WEB-INF 中资
    源的。

    SpringMVC 框架把原来 Servlet 中的请求转发和重定向操作进行了封装。现在可以使用简
    单的方式实现转发和重定向。

    forward:表示转发，实现 request.getRequestDispatcher("xx.jsp").forward()
    redirect:表示重定向，实现 response.sendRedirect("xxx.jsp")

    处理器方法返回 ModelAndView 时，需在 setViewName()指定的视图前添加 forward:，且
    此时的视图不再与视图解析器一同工作，这样可以在配置了解析器时指定不同位置的视图。
    视图页面必须写出相对于项目根的路径。forward 操作不需要视图解析器。

    处理器方法返回 String,在视图路径前面加入 forward: 视图完整路径。

    在处理器方法返回的视图字符串的前面添加 redirect:，则可实现重定向跳转。

    请求转发的原理：
        用户只向浏览器发起一次请求，当用户发送到服务器中的资源1文件的时候
        这个文件不能处理这个请求，此时服务器会将这个请求发送给服务器中的资源2
        进行处理，这个转发是由服务器完成的，而不是用户。
        此时资源2是可以在WEB-INF下的。

    重定向的原理：
        用户第一次向服务器发送请求的时候，服务器中的资源1不可以处理这个请求，
        会将这个结果返回浏览器，告诉用户此时资源1不可以处理这个请求并且
        告诉用户资源2可以处理这个文件。但是这个资源2不可以在WEB-INF下，
        因为用户不可以直接请求到WEN-INF下的页面，只有服务器可以处理WEB-INF下
        的资源。

    请求转发用户只发送一次请求，但是重定向用户需要发送两次请求




