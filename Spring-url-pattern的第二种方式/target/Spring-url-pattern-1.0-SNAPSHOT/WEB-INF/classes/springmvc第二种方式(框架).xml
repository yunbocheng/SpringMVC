<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--声明组件扫描器，这个是为了扫描到类中注解，然后创建相应的Servlet对象-->
    <context:component-scan base-package="com.yunbocheng.controller" />

    <!--声明 SpringMVC框架中的视图解析器，帮助开发人员设置视图文件(jsp文件)的路径-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--前缀：视图文件的路径-->
        <!--注意:这个路径前后的斜杠都需要加，第一个斜杠代表web的根路径，第二个斜杠代表他是一个路径-->
        <property name="prefix" value="/WEB-INF/view/" />
        <!--后缀：视图文件的扩展名-->
        <property name="suffix" value=".jsp" />
    </bean>

    <!--
        当web.xml的中央调度器中路径(url-pattern)值使用斜杠的时候 需要处理静态资源。
        第二种处理方式：
        mvc:resources : 加入后框架会创建 ResourceHttpRequestHandler这个处理器对象。
        让这个对象处理静态资源的访问，不依赖tomcat服务器。

        mapping : 访问静态资源的uri地址，使用通配符 **
            image/** ：可以表示image为根路径下的所有路径信息，
                       比如：image/p1.jsp  image/image2/p2.jsp
                            即使存在多级目录也是可以的，只要保证这个根路径是image都可以访问到

        location : 静态资源在项目中的目录位置
            也就是存储这个照片的文件夹所在的位置
            第一个/ ：表示项目的webapp的根路径(可以省略)
            第二个/ ：表示这是一个路径信息

        也就是代表以 image 开头的静态请求都去 image目录下寻找
                以 html开头的请求都去 html 目录下寻找
    -->
    <mvc:resources mapping="/image/**" location="/image/" />
    <mvc:resources mapping="/html/**" location="/html/" />
    <!--注意：只要是静态资源都需要在这里声明一下，js也是需要声明的-->
    <mvc:resources mapping="/js/**" location="/jQuery/" />

    <!--
        以上这种方式我们要指定多个mvc:resources标签。此时我们可以将这些静态文件全部放到一个static文件夹中，
        此时只需要使用一个 mvc:resources标签即可完成。(重点)
    -->
    <mvc:resources mapping="/static/**" location="/static/" />

    <!--mvc:resources和@RequestMapping注解还是存在注解冲突的。需要加入注解驱动-->
    <mvc:annotation-driven/>
</beans>